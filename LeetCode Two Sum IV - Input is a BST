//Source: https://leetcode.com/problems/two-sum-iv-input-is-a-bst/
//Solution using java:
/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */

/**
 * Solution:
 * Traverse the tree to get a String of all node.val from the tree.
 * Store all elements of the tree in a List by taking them from the String.
 * Use nested for loop to check for requirement.
 * This solution is easy to understand.
 * However, time complexity is O(n*2).
 */
class Solution {
    public boolean findTarget(TreeNode root, int k) {
        String traverseTree = traverse(root);
        ArrayList<Integer> list = new ArrayList<>();
        for(int i=0; i< traverseTree.length(); i++){
            list.add(Integer.parseInt(traverseTree.charAt(i)+""));
        }
        boolean isTrue = false;
        //list.add(traverse(root));
        for(int i = 0; i<list.size()-1; i++){
            for(int j=i+1; j<list.size(); j++){
                if(list.get(i) + list.get(j) == k){
                    isTrue = true;
                    break;
                }
            }
        }
        return isTrue;
    }
    
    public String traverse(TreeNode root){
        if(root!=null){
            return traverse(root.left)+root.val+traverse(root.right);
        }else{
            return "";
        }
    }
}
